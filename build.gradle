plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'guru.qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


def allureVersion = '2.20.0'

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation (
            'org.junit.jupiter:junit-jupiter:5.9.0',
            'org.slf4j:slf4j-simple:2.0.4',
            'io.rest-assured:rest-assured:5.3.0',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'org.json:json:20220924',
            'com.fasterxml.jackson.core:jackson-annotations:2.14.0',
            'com.fasterxml.jackson.core:jackson-core:2.14.0',
            'com.fasterxml.jackson.core:jackson-databind:2.14.0',
            'com.github.javafaker:javafaker:1.0.2',
            'org.assertj:assertj-core:3.23.1'
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}